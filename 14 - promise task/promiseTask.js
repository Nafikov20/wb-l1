
//  Определение функции promiseTask, которая принимает URL изображения.
function promiseTask(urlImg) {
    //  Возвращаем новый промис.
    return new Promise((resolve, reject) => {
        //  Создаем объект изображения.
        const image = new Image();

        //  Устанавливаем обработчики для успешного разрешения и ошибки промиса.
        image.onload = () => {
            const imageInfo = {
                width: image.width,
                height: image.height,
                src: urlImg,
            };
            // Резолвим промис при успешной загрузке.
            resolve(image);
        };

        image.onerror = (error) => {
            // Реджектим промис если неудачная загрузка.
            reject(error);
        };

        //  Устанавливаем источник изображения для загрузки.
        image.src = urlImg;
    });
}

//  Задаем URL изображения.
const imgUrl = '';

//  Вызываем функцию promiseTask, передавая URL изображения в аргументы.
promiseTask(imgUrl)
    .then((img) => {
    //  Выводим в консоль объект изображения при успешной загрузке.
    console.log('Изображение загружено:', img);
    })
    .catch((error) => {
    // Выводим в консоль сообщение об ошибке при неудачной загрузке.
    console.error('Ошибка загрузки изображения:', error);
});


//14.	Задача на промисы: напишите функцию, которая принимает URL изображения и возвращает промис, который разрешается с данными об изображении, когда оно загружено.
//      Когда говорится "промис разрешается с данными об изображении", это означает, что промис должен быть успешно выполнен (resolved) с данными об изображении после того, как изображение будет загружено.